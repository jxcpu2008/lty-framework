<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd  
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.lty.app.web.auth.controller" />
	<mvc:annotation-driven />
	<bean class="com.lty.app.web.auth.config.SwaggerConfig"></bean>
	<!-- 开启API在线文档 -->
	<!-- 所有swagger目录的访问，直接访问location指定的目录 -->
	<!-- <mvc:resources mapping="/swagger/**" location="/swagger/" /> -->
	<mvc:default-servlet-handler />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<description>注解controller方法适配器</description>
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<!--JSON转换器 -->
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true"/>
		<!-- 开启 后缀名的支持， 默认是true -->
		<property name="favorPathExtension" value="true"/>
		<!-- 开启 参数的支持，默认是true -->
		<property name="favorParameter" value="true"/>
		<property name="parameterName" value="format"/>
		<property name="defaultContentType" value="text/html"/>
		<property name="mediaTypes">
            <value>
                html=text/html
                json=application/json
                xml=application/xml
            </value>
        </property>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="0"/>
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView" p:marshaller-ref="xmlMarshaller"/>
            </list>
        </property>
    </bean>
    
    <!-- FreeMarker基础设施及视图解析器配置 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer" 
    		p:templateLoaderPath="/WEB-INF/ftl" 
    		p:defaultEncoding="UTF-8">
        <property name="freemarkerSettings">
            <props>
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
            p:order="5" 
            p:suffix=".ftl" 
            p:contentType="text/html; charset=utf-8"/>
    
    <bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="streamDriver">
            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.lty.app.facade.auth.model.User</value>
            </list>
        </property>
    </bean>
	
	<!-- 不是最佳的实践，因为jsp放在WEB-INF目录外面，可以在浏览器直接输入页面访问 -->
<!-- 	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" /> -->
	
	<!-- 最佳实践，将页面都放到WEB-INF目录下，外界不能直接访问页面 -->
	<bean id="myViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/views/jsp"/>
	    <property name="suffix" value=".jsp"/>
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- 静态资源映射-->
	<!-- <mvc:default-servlet-handler /> -->
	
	<!-- shiro配置 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	<!-- 自定义扫描begin -->
	<bean id="scanControll" class="com.lty.utils.scan.scan.ScanControll" init-method="init">
		<constructor-arg index="0" value="com.lty.app.web.auth.controller" />
		<constructor-arg index="1" ref="hander" />
	</bean>
	
	<!-- 自定义扫描begin -->
	<bean id="hander" class="com.lty.app.web.auth.scanHandler.ScanHandler"></bean>

</beans>